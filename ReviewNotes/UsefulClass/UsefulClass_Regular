// 정규표현식 : 텍스트 데이터중 원하는 조건(패턴)과 일치하는 문자열을 찾아내기 위한 도구
// 1. 정규표현식 문자열 생성
// 소문자 c로 시작하고 소문자 a-z로 구성된 모든 문자열 
String pattern = "c[a-z]*";
		
Scanner sc = new Scanner(System.in);
		
System.out.println("문자열을 입력하세요.");
String compare = sc.nextLine();
		
//	2. 정규표현식을 Pattern 객체로 생성
// Pattern 클래스의 compile 메소드 사용
Pattern pt = Pattern.compile(pattern);
		
// 3. 비교할 문자열을 Matcher 객체로 생성
// Pattern 객체의 matcher 메소드 사용
Matcher matcher = pt.matcher(compare);
		
// 4. Matcher 객체의 matches 메소드로 문자열이 정규표현식과 부합한지 비교
// 부합하면 true, 부합하지 않으면 false 리턴
if(matcher.matches()) {
	System.out.println(compare + "는 소문자 c로 시작하고 소문자 a-z만 포함한 문자열입니다.");
} else {
	System.out.println("부합하지 않습니다.");
}
------------------------------------------다른 예제-------------------------------------------
String pattern = "010.*-[0-9]{4}-[0-9]{4}";
String compare = "010-1111-1111";
		
Pattern pt = Pattern.compile(pattern);
		
Matcher matcher = pt.matcher(compare);
		
if(matcher.matches()) {
	System.out.println("올바른 전화번호 양식입니다.");
} else {
	System.out.println("전화번호 양식이 올바르지 않습니다. 다시 입력하세요.");
}
