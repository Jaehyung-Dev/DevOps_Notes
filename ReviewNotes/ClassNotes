1. 클래스 구분
// 메인메소드를 가지고 있는 클래스는 실행 클래스로 실제 자바 코드가 실행되는 클래스
// 메인메소드가 없는 클래스는 부품의 역할만 하는 클래스
// 메인메소드가 없는 클래스의 경우 변수로 선언해서 사용해야한다.
AccessModifierCalculator ac = new AccessModifierCalculator(); // 객체(부품) 생성

// 클래스에 정의해놓은 메소드나 변수를 사용할 때는 변수명.변수명, 변수명.메소드명으로 사용한다.
// 현재 AccessModifierCalculator가 다른 패키지에 있기 때문에 public으로 선언한 add 메소드만 사용할 수 있다.
ac.add(); 
## 접기 시작 <details><summary>접기/펼치기</summary> 접은 내용(ex 소스 코드)</details> ## 접기 끝
출처: https://backendcode.tistory.com/173 [무작정 개발:티스토리]
public class AccessModifierCalculator {
	// 1. 접근제어자
	// 접근제어자는 메소드의 사용범위를 지정하는 기능이다.
	
	// public : 어디서나 사용을 가능하게하는 접근제어자
	public void add() {
		System.out.println(10 + 20);
	}
	
	// protected : 현재 클래스, 같은 패키지내의 클래스, 자식 클래스에서만 사용이 가능
	protected void sub() {
		System.out.println(20 - 10);
	}
	
	// default : 현재 클래스, 같은 패키지내의 클래스에서 사용이 가능
	// default 접근제어자는 접근제어자를 명시하지 않으면 생성된다.
	void mul() {
		System.out.println(10 * 20);
	}
	
	// private : 현재 클래스에서만 사용이 가능
	private void div() {
		System.out.println(20 / 10);
	}
	
}
